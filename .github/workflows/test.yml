name: Fleet-BI dev
on:
  push:
    branches: 
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:
    inputs:
      envronment: 
        description: 'Target Environment (dev)'
        required: true
        type: choice
        options:
          - dev
      deploy_target:
        description: 'Deployment action'
        required: true
        type: choice
        options:
          - plan
          - deploy

jobs:
  terraform:
    runs-on: ubuntu latest
    steps:
     - name: Checkout
       uses: actions/checkout@v4
     - name: Setup Terraform
       uses: hashicorp/setup-terraform@v3
       with:
         terraform_version: "1.1.7"
     - name: Auth Google
       uses: 'google-github-actions/auth@v2'
       with:
         credentials_json: '${{ secrets.DEV_GCP_SERVICE_ACCOUNT_JSON }}'
     - name: Set up Cloud SDK
       uses: 'google-github-actions/setup-gcloud@v2'
     - name: Terraform init
       run: |
         cd ${{ github.workspace }}/${{ env.TERRAFORM_DIR }}
         terraform init ${{ env.TF_INIT_ARGS }}
     - name: terraform action
       run: |
         set -e
         cd ${{ github.workspace }}/${{ env.TERRAFORM_DIR }}
         if [ ${{ github.event_name }} = 'push' ] || ([ ${{ github.event_name }} = 'workflow_dispatch' ] && [ ${{ inputs.deploy_target }} == 'deploy' ]); then
           echo "terraform apply in progress..."
           terraform apply ${{ env.TF_INIT_ARGS }} -auto-approve
         else
           echo "terraform plan ..."
           teraform plan ${{ env.TF_INIT_ARGS }} -lock=false -detailed-exit-code -no-color -out=$(pwd)/plan.out
           status=$?

           if [ ${status} -eq 1 ]; then
             echo "Error occurred during terraform plan"
             exit 1
           fi

           if [ {status} -eq 2 ]; then
             terraform show plan.out
           fi
         fi
     
